"""
888. 公平的糖果交换

爱丽丝和鲍勃有不同大小的糖果棒：A[i] 是爱丽丝拥有的第 i 块糖的大小，B[j] 是鲍勃拥有的第 j 块糖的大小。
因为他们是朋友，所以他们想交换一个糖果棒，这样交换后，他们都有相同的糖果总量。
（一个人拥有的糖果总量是他们拥有的糖果棒大小的总和。）
返回一个整数数组 ans，其中 ans[0] 是爱丽丝必须交换的糖果棒的大小，ans[1] 是 Bob 必须交换的糖果棒的大小。
如果有多个答案，你可以返回其中任何一个。保证答案存在。

示例 1：
输入：A = [1,1], B = [2,2]
输出：[1,2]

示例 2：
输入：A = [1,2], B = [2,3]
输出：[1,2]

示例 3：
输入：A = [2], B = [1,3]
输出：[2,3]

示例 4：
输入：A = [1,2,5], B = [2,4]
输出：[5,4]

提示：
1 <= A.length <= 10000
1 <= B.length <= 10000
1 <= A[i] <= 100000
1 <= B[i] <= 100000
保证爱丽丝与鲍勃的糖果总量不同。
答案肯定存在。
"""


class Solution:
    def fairCandySwap(self, A, B):
        """
        :type A: List[int]
        :type B: List[int]
        :rtype: List[int]
        """
        bs = set(B)
        diff = (sum(A) - sum(B)) // 2

        for m in A:
            n = m - diff
            if (n in bs):
                return (m, n)


s = Solution()
print(s.fairCandySwap([1, 2, 5], [2, 4]))
print(s.fairCandySwap([2], [1, 3]))
"""
此题解法：分别计算A、B的和，然后将两个和的差值除以2，就知道了两个数组真实的差距（diff)。
遍历数组A，用每个数减去diff，如果结果能在B内找到，就是应该交换的两个值。
* 为了提高搜索的效率，需要将B转换成set。
"""
