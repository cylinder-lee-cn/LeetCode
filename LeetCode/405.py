"""
405. 数字转换为十六进制数

给定一个整数，编写一个算法将这个数转换为十六进制数。对于负整数，我们通常使用 补码运算 方法。

注意:

十六进制中所有字母(a-f)都必须是小写。
十六进制字符串中不能包含多余的前导零。如果要转化的数为0，那么以单个字符'0'来表示；对于其他情况，十六进制字符串中的第一个字符将不会是0字符。
给定的数确保在32位有符号整数范围内。
不能使用任何由库提供的将数字直接转换或格式化为十六进制的方法。

示例 1：
输入:
26
输出:
"1a"

示例 2：
输入:
-1
输出:
"ffffffff"

"""


class Solution(object):
    def toHex(self, num):
        """
        :type num: int
        :rtype: str
        """

        d = {0: '0', 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 7: '7', 8: '8', 9: '9', 10: 'a', 11: 'b', 12: 'c',
             13: 'd', 14: 'e', 15: 'f', -1: 'f'}
        s, y = num, 0
        h = ''
        i = 1
        if (num >= 0):
            while (s >= 16):
                s, y = divmod(num, 16)
                num = s
                h = d[y] + h
            h = d[s] + h
            return h
        else:
            while (s < -1 or i < 16):
                s, y = divmod(num, 16)
                num = s
                h = d[y] + h
                i = i + 1
            h = d[s] + h
            return h[8:16]



s = Solution()
# print(s.toHex(-1))
print(s.toHex(26))
# print(s.toHex(-214748364890))

"""
此题解法, 用标准的数学方式来进行进制转换. 十进制转换成十六进制, num ÷ 16 分别获得商和余数,
余数是最低位,然后继续用商除16获得商和余数,直至商<0, 十六进制的书就是 商(最后一次),余数N,余数N-1....余数1
这就是最后的十六进制数(别忘了转换成对应的字母 a-f)

比如: 2500 转换成16进制, 2500÷16=156...4, 最低位是4, 继续 156÷16=9...12, 次低位是12(c),商是9.
所以十六进制的数字是9c4
"""